% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geographic_operations.R
\name{spatial.join.locs}
\alias{spatial.join.locs}
\title{Spatial join; join information of a shape to the points that it contains}
\usage{
spatial.join.locs(points, shapes, targetcolumn, column.names)
}
\arguments{
\item{points}{a SpatialPointsDataFrame. Projection cannot be unknown.}

\item{shapes}{a SpatialPolygonsDataFrame. Projection cannot be unknown.}

\item{targetcolumn}{a character string vector with the names of the columns in \emph{shapes} which need to
be joined to \emph{points}.}

\item{column.names}{a character string vector with the column names that will be given to the joined 
columns added to \emph{points}.}
}
\value{
It returns the points spdf with the new columns joined to the data.frame.
}
\description{
Spatial join; join information of a shape to the points that it contains
}
\examples{
pts = cbind(1.5:5.5, 1.5:5.5)
dimnames(pts)[[1]] = letters[1:5]
df = data.frame(a = 1:5)
row.names(df) = letters[5:1]
points <- SpatialPointsDataFrame(pts, df, match.ID = TRUE)

grd <- GridTopology(c(1,1), c(1,1), c(10,10))
polys <- as(grd, "SpatialPolygons")
centroids <- coordinates(polys)
x <- centroids[,1]
y <- centroids[,2]
z <- 1.4 + 0.1*x + 0.2*y + 0.002*x*x
pols <- SpatialPolygonsDataFrame(polys,
                                 data=data.frame(x=x, y=y, z=z, row.names=row.names(polys)))
result <- spatial.join.locs(points, pols)
}
